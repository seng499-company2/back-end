# Dockerfile created using: https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/

###########
# BUILDER #
###########

# Pull official base image
FROM python:3.10 as builder

# Set work directory
WORKDIR /usr/src/app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update -y \
    && apt-get install -y postgresql gcc python3-dev musl-dev

# install dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
COPY ./requirements-testpypi.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements-testpypi.txt


#########
# FINAL #
#########

# Pull official base image
FROM python:3.10

# Create directory for the app user
RUN mkdir -p /home/app

# Create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# Install dependencies
RUN apt-get update && apt-get install libpq-dev
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
COPY --from=builder /usr/src/app/requirements-testpypi.txt .
RUN pip install --no-cache /wheels/*

# Copy entrypoint.sh
COPY ./entrypoint.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.sh
RUN chmod +x  $APP_HOME/entrypoint.sh

# Copy project
COPY . $APP_HOME

EXPOSE 8000

# Run entrypoint.sh to apply migrations
ENTRYPOINT ["sh", "/home/app/web/entrypoint.sh"]